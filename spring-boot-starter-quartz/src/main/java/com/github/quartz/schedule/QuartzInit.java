package com.github.quartz.schedule;import com.github.quartz.config.QuartzProperties;import org.slf4j.Logger;import org.slf4j.LoggerFactory;import org.springframework.beans.factory.InitializingBean;import org.springframework.core.io.ClassPathResource;import org.springframework.core.io.support.EncodedResource;import org.springframework.jdbc.datasource.init.ScriptUtils;import org.springframework.jdbc.support.JdbcUtils;import org.springframework.util.ObjectUtils;import javax.sql.DataSource;import java.sql.Connection;import java.sql.SQLException;/** * @DESCRIPTION: 清理Quartz记录的任务 * @AUTHER: chenmin * @CREATE BY: 18/1/12 下午5:32 */public class QuartzInit implements InitializingBean {    public static final Logger logger = LoggerFactory.getLogger(QuartzInit.class);    private QuartzProperties quartzProperties;    private DataSource dataSource;    private String sql;    public QuartzInit() {    }    public QuartzInit(QuartzProperties quartzProperties, DataSource dataSource) {        this.quartzProperties = quartzProperties;        this.dataSource = dataSource;    }    public QuartzInit setQuartzProperties(QuartzProperties quartzProperties) {        this.quartzProperties = quartzProperties;        return this;    }    public QuartzInit setDataSource(DataSource dataSource) {        this.dataSource = dataSource;        return this;    }    public QuartzInit setSql(String sql) {        this.sql = sql;        return this;    }    public void execute(String sql) {        Boolean durability = quartzProperties.getDurability();        if (durability) {            // 任务完成后，允许保留在数据库，不用清理        } else {            // 任务完成后，不允许保留在数据库，需要清理            Connection connection = null;            try {                connection = dataSource.getConnection();                ClassPathResource classPathResource = new ClassPathResource(sql);                EncodedResource encodedResource = new EncodedResource(classPathResource, "utf-8");                ScriptUtils.executeSqlScript(connection, encodedResource);            } catch (SQLException e) {                logger.debug("quartz inited error, ", e);            } finally {                JdbcUtils.closeConnection(connection);            }        }    }    @Override    public void afterPropertiesSet() throws Exception {        if (!ObjectUtils.isEmpty(this.sql)) {            execute(this.sql);        }    }}