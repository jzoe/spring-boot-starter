package com.github.quartz.schedule;import org.slf4j.Logger;import org.slf4j.LoggerFactory;import org.springframework.beans.factory.InitializingBean;import org.springframework.core.io.ClassPathResource;import org.springframework.core.io.support.EncodedResource;import org.springframework.jdbc.datasource.init.ScriptUtils;import org.springframework.jdbc.support.JdbcUtils;import org.springframework.util.ObjectUtils;import javax.sql.DataSource;import java.sql.Connection;import java.sql.SQLException;/** * @DESCRIPTION: 清理Quartz记录的任务 * @AUTHER: chenmin * @CREATE BY: 18/1/12 下午5:32 */public class SqlScriptExecute implements InitializingBean {    public static final Logger logger = LoggerFactory.getLogger(SqlScriptExecute.class);    private DataSource dataSource;    private String sql;    public SqlScriptExecute() {    }    public SqlScriptExecute(DataSource dataSource) {        this.dataSource = dataSource;    }    public SqlScriptExecute setDataSource(DataSource dataSource) {        this.dataSource = dataSource;        return this;    }    public SqlScriptExecute setSql(String sql) {        this.sql = sql;        return this;    }    public void execute(String sql) {        Connection connection = null;        try {            connection = dataSource.getConnection();            ClassPathResource classPathResource = new ClassPathResource(sql);            EncodedResource encodedResource = new EncodedResource(classPathResource, "utf-8");            ScriptUtils.executeSqlScript(connection, encodedResource);        } catch (SQLException e) {            logger.debug("quartz inited error, ", e);        } finally {            JdbcUtils.closeConnection(connection);        }    }    @Override    public void afterPropertiesSet() throws Exception {        if (!ObjectUtils.isEmpty(this.sql)) {            execute(this.sql);        }    }}