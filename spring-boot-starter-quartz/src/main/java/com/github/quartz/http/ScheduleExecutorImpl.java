package com.github.quartz.http;import com.github.quartz.model.entity.QrtzTimedTask;import com.github.quartz.schedule.util.QuartzUtil;import org.quartz.Scheduler;import org.quartz.SchedulerException;import org.springframework.context.ApplicationContext;import org.springframework.util.ReflectionUtils;import java.lang.reflect.Method;import java.util.Map;/** * @DESCRIPTION: * @AUTHER: chenmin * @CREATE BY: 18/1/13 上午12:35 */public class ScheduleExecutorImpl implements ScheduleExecutor {    private ApplicationContext applicationContext;    private Scheduler scheduler;    private QuartzUtil quartzUtil;    @Override    public void invoke(QrtzTimedTask qrtzTimedTask) throws SchedulerException {        String taskMethod = qrtzTimedTask.getTaskMethod();        String beanName = quartzUtil.buildTargetObject(qrtzTimedTask);        Map<String, Object> param = quartzUtil.buildParams(qrtzTimedTask);        Object bean = applicationContext.getBean(beanName);        Method method = ReflectionUtils.findMethod(bean.getClass(), taskMethod, Map.class);        ReflectionUtils.invokeMethod(method, bean, param);    }    @Override    public void add(QrtzTimedTask qrtzTimedTask) throws SchedulerException {        quartzUtil.start(qrtzTimedTask, scheduler);    }    @Override    public void stop(QrtzTimedTask qrtzTimedTask) throws SchedulerException {        quartzUtil.stop(qrtzTimedTask);    }    @Override    public void update(QrtzTimedTask qrtzTimedTask) throws SchedulerException {        quartzUtil.update(qrtzTimedTask, scheduler);    }    public ScheduleExecutorImpl setApplicationContext(ApplicationContext applicationContext) {        this.applicationContext = applicationContext;        return this;    }    public ScheduleExecutorImpl setScheduler(Scheduler scheduler) {        this.scheduler = scheduler;        return this;    }    public ScheduleExecutorImpl setQuartzUtil(QuartzUtil quartzUtil) {        this.quartzUtil = quartzUtil;        return this;    }}